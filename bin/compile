#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

SCOUTD_VERSION="0.4.20"
SCOUTD_SOURCE="http://archive.scoutapp.com/pool/main/s/scoutd/scoutd_0.4.20-1ubuntu1_amd64.deb"
SCOUTD_PACKAGE="scoutd_0.4.20-1ubuntu_amd64.deb"
SCOUTD_SOURCE_DIR="source/scoutd"
SCOUTD_VENDOR="vendor/scoutd"

BUILD_DIR=$1
CACHE_DIR=$2
CACHE_BUILD_VERSION_FILE="$CACHE_DIR/BUILD_VERSION"



# Vendor scoutd
echo "-----> Downloading scoutd"
echo "$BUILD_DIR/$SCOUTD_SOURCE_DIR"
mkdir -p $BUILD_DIR/$SCOUTD_SOURCE_DIR
wget $SCOUTD_SOURCE

echo "-----> Extracting scoutd"
ar x $SCOUTD_PACKAGE

echo "-----> Untarring scoutd"
tar -zxvf data.tar.gz

# echo "-----> Generating the boot script"
# cat >>$BUILD_DIR/bin/boot.sh <<'EOF'
# #!/usr/bin/env bash

# mkdir -p conf.d
# mkdir -p tmp/conf

# if [ "$SYSTEM_NAME" == ""]; then
#   export SYSTEM_NAME=Heroku
# fi

# for f in `ls conf.d`
# do
#   echo "Processing conf.d/$f file..."
#   cat conf.d/$f > tmp/conf/$f.tmp && mv tmp/conf/$f.tmp conf.d/$f
# done

# cat scoutrc > scoutrc.tmp && mv scoutrc.tmp scoutrc

# vendor/scoutd/bin/scoutd -c scoutrc -p tmp/.scoutd.pid -s tmp/.scoutd.state -I -v
# EOF

# chmod +x $BUILD_DIR/bin/boot.sh

# echo $SCOUTD_VERSION > $CACHE_BUILD_VERSION_FILE
# cp -r $BUILD_DIR/vendor $CACHE_DIR/vendor
# cp -r $BUILD_DIR/bin $CACHE_DIR/bin

echo "-----> Done"
